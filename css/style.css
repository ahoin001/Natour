/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/**********************************************************
                        Utility
**********************************************************/
/* CSS RESET */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  /* Project Wide font defintions */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;

  padding: 30px;
}

/**********************************************************
                        
                    HERO HEADER

**********************************************************/

.header {
  /* Height will always be 95% height of view port */
  height: 95vh;

  position: relative;

  /* First background is gradient we want on top of background image */
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url("../img/hero.jpg");

  background-size: cover;

  /* So When window is shrinking only bottom will be cropped */
  background-position: top;

  /* TODO To choose how much of header will be shown */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  /* TODO Setting width or height alone, the browser will figure out the other */
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* TODO To Move element, position absolute moves left of div to postion, we move another half to finish centering */
  transform: translate(-50%, -50%);

  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  margin-bottom: 60px;

  /* TODO Fix for animations that cause parent to "shake" */
  backface-visibility: hidden;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

.heading-primary-secondary {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

/* TODO Create an animation */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* Off screen on left */
    transform: translateX(-100px);
  }

  80% {
    /* Move alittle far right */
    transform: translateX(20px);
  }

  100% {
    opacity: 1;
    /* Return to  Original position */
    transform: translateX(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    /* Off screen on left */
    transform: translateX(100px);
  }

  80% {
    /* Move alittle far right */
    transform: translateX(-20px);
  }

  100% {
    opacity: 1;
    /* Return to  Original position */
    transform: translateX(0);
  }
}

/* Link is psuedo for links that have not been visited yet */
/* Visited is visited */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;

  padding: 15px 40px;

  border-radius: 100px;

  position: relative;

  /* All above properties are animateable because of 'all', and will take .2 seconds 
    This includes the transforming animations, so now our click and hover are a smooth .2s
  */

  transition: all 0.2s;

}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    /* Off screen on left */
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    /* Return to  Original position */
    transform: translateY(0);
  }
}

.btn:hover {
  transform: translateY(-3px);

  /*  X shadow , Y shadow , Blur , black with .2 opacity*/
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
}

/* When button is clicked, it "moves down" from the hover states higher y value */
/* Its actually -1px from its starting state, but this emulates a push down affect */
.btn:active {
  transform: translateY(-1px);

  /* On Click decrease shadow to help the feeling of pressing button ddown */
  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
  display: inline-block;
}

/* Places an element directly after, for example <a href=#> wqefw (:after element is here)  </a>  */
/* Position absolute to our btn:link :visited .   */
.btn:after {
  /* Content is whatver would be inside element*/
  content: "";
  display: inline-block;

  /* Make it same size as btn*/
  height: 100%;
  width: 100%;
  border-radius: 100px;

  /* Place it behind button and under button */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  /* TO SEE THE AFTER ELEMENT, REMOVE -1 INDEX AND CHANGE BGC (Must also comment out from btn white:after class*/
  /* background-color: white; */
  /* background-color: wheat; */

  /* opacity: 1; */

  transition: all 0.4s;
}

/* TODO marcos : PLease explain why this overwrites previous after, instead of being a new one 
                 Is it because an element will only have one even if multiple classes give it one?
*/
.btn-white:after {
  background-color: #fff;
  /* background-color: wheat; */
}

/* On hover the button in the back will grow and fade */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {

  /* animation: moveInnBottom .5s ease-out .75s; */

  animation-name: moveInBottom;
  animation-duration: .7s;
  animation-timing-function: ease-out;

  /* So that button will start with animation instead of render and then animate */
  animation-fill-mode: backwards;

}